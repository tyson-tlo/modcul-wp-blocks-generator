/* eslint-disable no-console */
const fs = require("fs");
const path = require("path");
const writeFile = require("./write-file");
const styleScssPath = path.resolve("src/style.scss");

// Helper function to dynamically update style.scss
const updateStyleScss = ({blocksDir}) => {
	try {
		const blocks = fs
			.readdirSync(blocksDir)
			.filter((dir) =>
				fs.statSync(path.join(blocksDir, dir)).isDirectory(),
			);

		const imports = blocks
			.map((block) => {
				const scssFile = path.join(
					blocksDir,
					block,
					"scss",
					"_main.scss",
				);
				if (fs.existsSync(scssFile)) {
					return `@import './blocks/${block}/scss/_main.scss';`;
				}
				console.warn(
					`Warning: SCSS file not found for block: ${block}`,
				);
				return null;
			})
			.filter(Boolean) // Remove null entries
			.join("\n");

		const header = `/*
 * This file is automatically generated.
 * Any variables and other custom scripts outside of blocks should be placed in scss/main.scss.
 */
@import './scss/main.scss';\n// Dynamically generated imports for block styles\n`;
		const content = `${header}${imports}\n`;

		writeFile(styleScssPath, content);
		console.log(`Updated style.scss with dynamic block imports.`);
	} catch (error) {
		console.log("Error updating style.scss: ", error);
	}
};

module.exports = updateStyleScss;
